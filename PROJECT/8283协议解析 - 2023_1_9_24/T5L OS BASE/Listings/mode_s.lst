C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MODE_S
OBJECT MODULE PLACED IN .\Objects\mode_s.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE Sources\mode_s.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.
                    -\Listings\mode_s.lst) TABS(2) OBJECT(.\Objects\mode_s.obj)

line level    source

   1          #include "T5LOS8051.H"
   2          #include "sys.h"
   3          #include "handle.h"
   4          //#include<stdio.h>
   5          #include "math.h"
   6          #include "mode_s.h"
   7          #include "start_win.h"
   8          
   9          
  10          uint MODE_S_C[4]={0,0,0,0};
  11          bit MODE_S_Aerosols=0;        /*****0关闭*****/
  12          bit MODE_S_Surfaces_Centre=0;
  13          bit MODE_S_Surfaces_All=0;
  14          uint ZIWAIXIAN_S_FINISH_FLAG=0; 
  15          
  16          uint First_S_shuju_FLAG=0;
  17          uint L_T_S_FLAG=0;
  18          double T_y=0.0;
  19          double T_y_Last=0.0;
  20          double T_beishu=1.0;
  21          double T_S_WORK=0.0;
  22          //uint T_XIANSHI=0;
  23          uint T_S_First=0;
  24          //double percent=1.0;
  25          float W_mJ_XIANSHI=0.0;
  26          //uint Reset_flag=0;  
  27          u8 MODE_1_Finish=0;   //模式一 自己时间消耗完 自动结束 0代表未结束，1代表自动结束模式1
  28          u16 Read_log_j;
  29          float qirongjiao_j;
  30          //float quyu_j;
  31          float quyu_zhongxin_j;
  32          void Mode_s_work(void);
  33          void S_bianliangqingling(void);
  34          void Transform_S_L_T_Aerosols(uint L_T);
  35          void Transform_S_L_T_Surfaces_Centre(uint L_T);
  36          void Transform_S_L_T_Surfaces_All(uint L_T);
  37          void S_LAST_Time(void);
  38          void qirongjiao_log(u16 log);
  39          void quyu_zhongxin_log(u16 log);
  40          
  41          
  42          void MODE_S_CHOOSE(void)
  43          {
  44   1        
  45   1          if(First_S_shuju_FLAG==0)
  46   1        {
  47   2          L_FINISH =  L_int;
  48   2          
  49   2        }
  50   1        //W_S[0]
  51   1        
  52   1      //  ReadDGUS(0x5100,(uint8_t *)&Read_log_j,sizeof(Read_log_j)); 
  53   1        
  54   1        
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 2   

  55   1        switch(W_S[0])
  56   1        {
  57   2          case 1:
  58   2          {
  59   3            MODE_S_Aerosols=1;
  60   3            MODE_S_Surfaces_All=0;
  61   3            MODE_S_Surfaces_Centre=0;
  62   3            ReadDGUS(0x5100,(uint8_t *)&Read_log_j,sizeof(Read_log_j)); //气溶胶log
  63   3             qirongjiao_log(Read_log_j);
  64   3            Transform_S_L_T_Aerosols(L_int);
  65   3            break;
  66   3          }
  67   2              case 3:
  68   2          {
  69   3            MODE_S_Aerosols=0;
  70   3            MODE_S_Surfaces_All=1;
  71   3            MODE_S_Surfaces_Centre=0;
  72   3            ReadDGUS(0x5102,(uint8_t *)&Read_log_j,sizeof(Read_log_j));
  73   3            quyu_zhongxin_log(Read_log_j);
  74   3            Transform_S_L_T_Surfaces_Centre(L_int);
  75   3            break;
  76   3          }
  77   2              case 2:
  78   2          {
  79   3            MODE_S_Aerosols=0;
  80   3            MODE_S_Surfaces_All=0;
  81   3            MODE_S_Surfaces_Centre=1;
  82   3            ReadDGUS(0x5101,(uint8_t *)&Read_log_j,sizeof(Read_log_j));
  83   3            quyu_zhongxin_log(Read_log_j);
  84   3            Transform_S_L_T_Surfaces_All(L_int);
  85   3            break;
  86   3          }
  87   2              default:
  88   2              {
  89   3                MODE_S_Aerosols=0;        /*****0关闭*****/
  90   3                MODE_S_Surfaces_All=0;
  91   3                MODE_S_Surfaces_Centre=0;
  92   3              }
  93   2        }
  94   1        //T_y=T_y;
  95   1        //T_y=T_y*percent;
  96   1      }
  97          
  98          
  99          
 100          void quyu_zhongxin_log(u16 log)
 101          {
 102   1        switch(log)
 103   1        {
 104   2          case 1:
 105   2          {
 106   3            quyu_zhongxin_j = 1000;
 107   3            break;
 108   3          }
 109   2              case 2:
 110   2          {
 111   3            quyu_zhongxin_j = 2000;
 112   3            break;
 113   3          }
 114   2              case 3:
 115   2          {
 116   3            quyu_zhongxin_j = 3000;
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 3   

 117   3            break;
 118   3          }
 119   2              case 4:
 120   2          {
 121   3            quyu_zhongxin_j = 5000;
 122   3            break;
 123   3          }
 124   2              case 5:
 125   2          {
 126   3            quyu_zhongxin_j = 7000;
 127   3            break;
 128   3          }
 129   2          
 130   2        }
 131   1      }
 132          
 133          
 134          void qirongjiao_log(u16 log)
 135          {
 136   1        switch(log)
 137   1        {
 138   2          case 1:
 139   2          {
 140   3            qirongjiao_j  = 500;
 141   3            break;
 142   3          }
 143   2              case 2:
 144   2          {
 145   3            qirongjiao_j  = 1000;
 146   3            break;
 147   3          }
 148   2              case 3:
 149   2          {
 150   3            qirongjiao_j  = 1500;
 151   3            break;
 152   3          }
 153   2              case 4:
 154   2          {
 155   3            qirongjiao_j  = 2500;
 156   3            break;
 157   3          }
 158   2              case 5:
 159   2          {
 160   3            qirongjiao_j  = 4000;
 161   3            break;
 162   3          }
 163   2          
 164   2        }
 165   1      }
 166          
 167          
 168          void First_S_shuju(void)
 169          {
 170   1        if(First_S_shuju_FLAG==0)
 171   1        {
 172   2          MODE_S_CHOOSE();
 173   2          T_XIANSHI=T_y;
 174   2          T_S_First=T_y;
 175   2          T_First=T_y;
 176   2          //T_XIANSHI=100;
 177   2          First_S_shuju_FLAG=1;
 178   2          Draw_W_Flag=1;
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 4   

 179   2        }
 180   1        
 181   1      }
 182          
 183          
 184          
 185          
 186          
 187          /******************输入距离给出时间 mm->s*********/
 188          void Transform_S_L_T_Aerosols(uint L_T) 
 189          {
 190   1        double L_CM;
 191   1        //uint qirongjiao_j;
 192   1      
 193   1        L_CM=L_T/10.0;
 194   1        //改为开始的时候读取MJ
 195   1        //ReadDGUS(0x5100,(uint8_t *)&qirongjiao_j,sizeof(qirongjiao_j));
 196   1        
 197   1        if(L_CM<400 && L_CM>5) L_T_S_FLAG=1;
 198   1      
 199   1              else L_T_S_FLAG=5;
 200   1        
 201   1        
 202   1        switch(L_T_S_FLAG)
 203   1        {
 204   2          case 1:
 205   2          {
 206   3            T_y=qirongjiao_j/change_P_mW_doing;
 207   3            break;
 208   3          }
 209   2      
 210   2              default:
 211   2          {
 212   3            L_T_S_FLAG=6;
 213   3            
 214   3            break;
 215   3          }
 216   2        }
 217   1      //  T_y=T_y*percent;
 218   1      }
 219          
 220          
 221          
 222          
 223          
 224          void Transform_S_L_T_Surfaces_Centre(uint L_T)  
 225          {
 226   1        double L_CM;
 227   1        L_CM=L_T/10.0;
 228   1        if(L_CM<400 && L_CM>5) L_T_S_FLAG=1;
 229   1      
 230   1              else L_T_S_FLAG=5;
 231   1        
 232   1        
 233   1        switch(L_T_S_FLAG)
 234   1        {
 235   2          case 1:
 236   2          {
 237   3            T_y=quyu_zhongxin_j/change_P_mW_doing;
 238   3            break;
 239   3          }
 240   2      
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 5   

 241   2              default:
 242   2          {
 243   3            L_T_S_FLAG=6;
 244   3            
 245   3            break;
 246   3          }
 247   2        }
 248   1      }
 249          
 250          
 251          
 252          
 253          void Transform_S_L_T_Surfaces_All(uint L_T) 
 254          {
 255   1        
 256   1      double L_CM;
 257   1        L_CM=L_T/10.0;
 258   1      
 259   1        if(L_CM<400 && L_CM>5) L_T_S_FLAG=1;
 260   1      
 261   1              else L_T_S_FLAG=5;
 262   1        
 263   1        
 264   1        switch(L_T_S_FLAG)
 265   1        {
 266   2          case 1:
 267   2          {
 268   3            T_y=quyu_zhongxin_j/change_P_mW_doing;
 269   3            break;
 270   3          }
 271   2      
 272   2              default:
 273   2          {
 274   3            L_T_S_FLAG=6;
 275   3            
 276   3            break;
 277   3          }
 278   2        }
 279   1      }
 280          
 281          //void S_LAST_Time(void)
 282          //{
 283          //  
 284          //  double T_beishu_he=0.0;
 285          //    if(T_S_WORK>0)
 286          //  {
 287          //  T_beishu_he=T_S_WORK/T_y_Last;
 288          //    if(T_beishu_he<=0 ||T_beishu_he>=1)
 289          //    {
 290          //      S_bianliangqingling();      
 291          //    }
 292          //  T_beishu=(T_beishu-T_beishu_he);
 293          //  T_XIANSHI=T_beishu*T_y;
 294          //    
 295          //  }
 296          //  
 297          //  T_S_WORK=0;
 298          //  ////T_beishu=0.008;
 299          //if(T_XIANSHI<=0|| T_XIANSHI>60000 ||  T_beishu>1)
 300          //{
 301          //  S_bianliangqingling();
 302          //}
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 6   

 303          //  
 304          //}
 305          
 306          
 307          //void Mode_s_work()
 308          //{
 309          //  
 310          ////  T_y_Last=T_y;
 311          ////  MODE_S_CHOOSE();
 312          ////  S_LAST_Time();
 313          //}
 314          
 315          
 316          void TIM0_1S_S_isr(void)
 317          {
 318   1        W_mJ_XIANSHI=W_mJ_XIANSHI+(change_P_mW_doing/1000.00f);
 319   1        T_doing++;
 320   1        T_S_WORK++;
 321   1        if(T_XIANSHI>0) T_XIANSHI--;
 322   1        UV=1;
 323   1        if(T_XIANSHI<=0)
 324   1        {
 325   2          S_bianliangqingling();
 326   2          MODE_1_Finish=1;
 327   2            //Reset_flag=1;
 328   2        }
 329   1      }
 330          
 331          void S_bianliangqingling(void)
 332          {
 333   1        MODE_S_Aerosols=0;        /*****0关闭*****/
 334   1        MODE_S_Surfaces_Centre=0;
 335   1        MODE_S_Surfaces_Centre=0;
 336   1      //  MODE_Static=0;
 337   1        W_S[2]=0x01;
 338   1        shuju_change=0;
 339   1        First_S_shuju_FLAG=0;
 340   1        L_T_S_FLAG=0;
 341   1        T_S_WORK=0;
 342   1        T_beishu=1.0;
 343   1        T_XIANSHI=0;
 344   1        ZIWAIXIAN_S_FINISH_FLAG=0;
 345   1      //  MODE=0;
 346   1        norflash_Close_UV_Flag=1;
 347   1      
 348   1        //Work_Time=0;
 349   1        UV=0;
 350   1        T_S_First=0;
 351   1        Draw_W_Flag=0;//停止画线
 352   1      
 353   1        
 354   1      //  W_mJ_XIANSHI=0;
 355   1        // Draw_Reset();
 356   1        // Rest_Draw_juxing();
 357   1        //T_doing=0;  //画进度条清零数据
 358   1        First_Draw_Flag=0;  //开启画线
 359   1        start_first_flag=0;
 360   1        Unlock_current_page();
 361   1      }
 362          
 363          void Static_T_Current_mode1()
 364          {
C51 COMPILER V9.59.0.0   MODE_S                                                            04/24/2025 12:33:10 PAGE 7   

 365   1        if(MODE==1)
 366   1        {
 367   2          
 368   2      //  ReadDGUS(0x5100,(uint8_t *)&Read_log_j,sizeof(Read_log_j)); 
 369   2        
 370   2        MODE_S_CHOOSE();
 371   2        T_XIANSHI=T_y;
 372   2        T_All=T_y;
 373   2        }
 374   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     47      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
