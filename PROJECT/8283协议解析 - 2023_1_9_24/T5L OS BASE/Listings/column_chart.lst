C51 COMPILER V9.60.0.0   COLUMN_CHART                                                      02/21/2023 00:29:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE COLUMN_CHART
OBJECT MODULE PLACED IN .\Objects\column_chart.obj
COMPILER INVOKED BY: D:\Keil\Keil C51\C51\BIN\C51.EXE Sources\column_chart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\column_chart.lst) TABS(2) OBJECT(.\Objects\column_chart.obj)

line level    source

   1          #include "column_chart.h"
   2          
   3          
   4          //柱状图源码
   5          //作者:熊家余 
   6          //有什么更好的建议或者功能,请反馈给此微信(15727652280)
   7          
   8          
   9          static struct{
  10            u16 cmd;//固定为0x0004
  11            u16 num;
  12            struct{
  13              u16 sx;
  14              u16 sy;
  15              u16 ex;
  16              u16 ey;
  17              u16 color;
  18            }datas[COLUMN_MAX_NUM];
  19            u16 end_flag;//结束标志,固定为0xff00
  20          }column_data;
  21          
  22          
  23          //绘制柱状图
  24          void column_chart_draw(COLUMN_CHART * chart)
  25          {
  26   1        #define END_FLAG    0xff00
  27   1        u16 i;
  28   1        
  29   1        if((!chart)||(chart->column_num>COLUMN_MAX_NUM))
  30   1          return;
  31   1        column_data.cmd = 0x0004;
  32   1        column_data.num = chart->column_num;
  33   1        for(i=0;i<column_data.num;i++)
  34   1        {
  35   2          column_data.datas[i].sx = chart->start_x+(chart->x_offset*i);
  36   2          column_data.datas[i].sy = chart->start_y-chart->columns[i].height;
  37   2          column_data.datas[i].ex = column_data.datas[i].sx+chart->column_width;
  38   2          column_data.datas[i].ey = chart->start_y;
  39   2          column_data.datas[i].color = chart->columns[i].color;
  40   2        }
  41   1        if(i<COLUMN_MAX_NUM)
  42   1          column_data.datas[i].sx = END_FLAG;
  43   1        else
  44   1          column_data.end_flag = END_FLAG;
  45   1        
  46   1      //  ReadDGUS(S_LED_0_Address,(uint8_t *)&LED_Buff[0],sizeof(LED_Buff[0]));
  47   1        WriteDGUS(chart->vp,(uint8_t*)&column_data,(3+5*i)*2);
  48   1      }
  49          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    531    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   COLUMN_CHART                                                      02/21/2023 00:29:41 PAGE 2   

   XDATA SIZE       =    206       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
