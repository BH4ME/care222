C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE APP\i2c.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Sources;.\APP) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          
   2          #include  "i2c.h"
*** ERROR C129 IN LINE 18 OF APP\i2c.h: missing ';' before 'SysTick_RTC'
   3          //#include "sys.h"
   4          #include "dgus.h"
   5          //#include "sys_params.h"
   6          
   7          uint16_t  SysTick_RTC=0;
   8          //bit RTC_Flog=0;
   9          
  10          
  11          
  12          uint8_t  Select_rtc=SELECT_RTC_TYPE; //选择RTC类型
  13          #if SELECT_RTC_TYPE   
  14          //===========================
  15          void Delayus() {uint8_t i;for(i=0;i<80;i++);}  //50
  16          //===========================
  17          void SDA_IN()  {P3MDOUT=P3MDOUT&0xF7;}
  18          //===========================
  19          void SDA_OUT() {P3MDOUT=P3MDOUT|0x08;}
  20          //===========================
  21          /**********************设置界面写入rtc检测*************************
  22          当提交键按下后运行此函数，先将年月日时分秒写入到9d地址，然后在将9c写入5aa5
  23          配合rx8130
  24          ********************************************************************/
  25          void RTC_SET_IN()
  26          {
  27            uint8_t RTC_H[4]; //2023 02 18  年月日
  28                          //0  1  2  3
  29            uint8_t RTC_L[4]; //00  12 45 23  时分秒
  30                          //0   1  2  3
  31            
  32           uint8_t RTC_6[6]={0};
  33            static uint8_t RTC_9C[2]={0x5a,0xa5};
  34             uint32_t RTC_H_HEX;
  35            static uint32_t RTC_L_HEX;
  36            //long i;
  37          // u64 RTC_8;
  38            ReadDGUS(0X1300,(uint8_t *)&RTC_H,sizeof(RTC_H));
  39            ReadDGUS(0X1305,(uint8_t *)&RTC_L,sizeof(RTC_L));
  40            
  41          
  42          //RTC[2]=0x12;
  43          //RTC[3]=0x66;
  44          //RTC[4]=0x37;
  45          //RTC[5]=0x06;
  46          //RTC[6]=0x4f;
  47          //RTC[7]=0x2b;
  48          //RTC_H[0]=0x01;
  49          //RTC_H[1]=0x34;
  50          //RTC_H[2]=0xb0;
  51          //RTC_H[3]=0x4b;
  52          //    else RTC[4]=1;
  53          //  }
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 2   

  54          //  else RTC[3]=1;
  55            //RTC_8=(RTC[0]<<56 | RTC[1]<<48  | RTC[2]<<40| RTC[3]<<32  | RTC[4]<<24  | RTC[5]<<16  |RTC[6]<<8  |RTC[7]);
  56            //for(i=0;i<=5;i++)   RTC_H_HEX=(uint32_t)(0x0134b04b);
  57            //{
  58              RTC_H_HEX=(uint32_t)(RTC_H[0])<<24  | (uint32_t)(RTC_H[1])<<16  | (uint32_t)(RTC_H[2])<<8 | (uint32_t)(RTC
             -_H[3]);
  59              RTC_L_HEX=(uint32_t)(RTC_L[0])<<24  | (uint32_t)(RTC_L[1])<<16  | (uint32_t)(RTC_L[2])<<8 | (uint32_t)(RTC
             -_L[3]);
  60              //RTC_H_HEX=(uint32_t)(0x0134b04b);
  61            //  RTC_L_HEX=((RTC_L[0]<<18  | RTC_L[1]<<10  |RTC_L[2]<<8  |RTC_L[3]));
  62              //RTC_6[5]=((uint32_t)(0x126637064f2b))%100;
  63              RTC_6[5]=RTC_L_HEX%100;
  64              RTC_6[4]=(RTC_L_HEX/100)%100;
  65              RTC_6[3]=(RTC_L_HEX/10000)%100;
  66              RTC_6[2]=RTC_H_HEX%100;
  67              RTC_6[1]=(RTC_H_HEX/100)%100;
  68              RTC_6[0]=(RTC_H_HEX/10000)%100;
  69            //}
  70            /***********************时间校准*********************/
  71            if(RTC_6[1]>0&&RTC_6[1]<=12)  //月
  72            {
  73              if(RTC_6[2]<=31&&RTC_6[2]>0)  //日
  74              {
  75                if(RTC_6[3]<=23&&RTC_6[3]>=0)
  76                {
  77                  if(RTC_6[4]<=59&&RTC_6[4]>=0)
  78                  {
  79                    if(RTC_6[5]<=59&&RTC_6[5]>=0)
  80                    {}
  81                      else RTC_6[5]=0;
  82                  }else RTC_6[4]=0;
  83                }else RTC_6[3]=0;
  84              }
  85                else RTC_6[2]=1;
  86            }
  87            else RTC_6[1]=1;
  88            
  89                WriteDGUS(0x9d, (uint8_t *)&RTC_6,sizeof(RTC_6)); 
  90                WriteDGUS(0x9c, (uint8_t *)&RTC_9C,sizeof(RTC_9C)); 
  91            
  92          }
  93          void Rx8130_Start()
  94          { 
  95                      SDA_OUT();
  96                      RTC_SDA=1;    //开始信号 scl为高时，sda由高到低
  97                      RTC_SCL=1;
  98                      Delayus();  //15
  99                      RTC_SDA=0;
 100                      Delayus();  //15
 101                      RTC_SCL=0;
 102                      Delayus();  //15
 103          }
 104          //================================
 105          void Rx8130_Stop()
 106          { 
 107                      SDA_OUT();
 108                      RTC_SDA=0;  //end信号 scl为高时，sda由0到1
 109                      RTC_SCL=1;
 110                      Delayus();//15
 111                      RTC_SDA=1;
 112                      Delayus();//15
 113                      SDA_IN();
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 3   

 114          }
 115          //================================
 116          void Rx8130_Mack()
 117          { 
 118                      SDA_OUT();
 119                      RTC_SDA=0;
 120                      Delayus();
 121                      RTC_SCL=1;
 122                      Delayus();
 123                      RTC_SCL=0;
 124                      Delayus();
 125          }
 126          //=================================
 127          void Rx8130_Mnak()
 128          { 
 129                      SDA_OUT();
 130                      RTC_SDA=1;
 131                      Delayus();
 132                      RTC_SCL=1;
 133                      Delayus();
 134                      RTC_SCL=0;
 135                      Delayus();
 136          }
 137          //=================================
 138          void Rx8130_Cack()
 139          { 
 140                      uint8_t i;
 141                      SDA_IN();
 142                      RTC_SDA=1;
 143                      Delayus();
 144                      RTC_SCL=1;
 145                      Delayus();
 146                      for(i=0;i<50;i++)
 147                      {   
 148                              if(!RTC_SDA) break;
 149                              Delayus();
 150                      }
 151                      RTC_SCL=0;
 152                      Delayus();
 153                      SDA_OUT();
 154          }
 155          //=========================================
 156          void Rx8130_Writ_Byte(uint8_t dat)
 157          { 
 158                      uint8_t i;
 159                      SDA_OUT();
 160                      for(i=0;i<8;i++)
 161                      { 
 162                                if(dat&0x80)   RTC_SDA=1;
 163                              else           RTC_SDA=0;
 164                              dat=(dat<<1);
 165                              Delayus();
 166                              RTC_SCL=1;
 167                              Delayus();
 168                              RTC_SCL=0;
 169                              Delayus();
 170                      }
 171                      Rx8130_Cack();
 172          }
 173          //====================================================
 174          uint8_t Rx8130_Read_Byte()
 175          { 
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 4   

 176                      uint8_t i;
 177                      uint8_t Dat;
 178                      SDA_IN();
 179                      for(i=0;i<8;i++)
 180                      { 
 181                              Delayus();
 182                              RTC_SCL=1;
 183                              Delayus();
 184                              Dat=(Dat<<1);
 185                              if(RTC_SDA)  Dat=Dat|0x01;
 186                              else         Dat=Dat&0xFE;
 187                              RTC_SCL=0;
 188                              Delayus();
 189                      }
 190                      return(Dat);
 191          }
 192          //====================================================
 193          uint8_t RTC_Get_Week(uint8_t years,uint8_t month,uint8_t day)
 194          { 
 195            uint8_t xdata weak;
 196            uint16_t xdata year;
 197            year= years+2000;
 198            if(month==1||month==2)
 199            {
 200              month += 12, year--;
 201            }
 202            if((year<1752)||(year==1752&&month<9)||(year==1752&&month==9&&day<3))
 203            {
 204              weak = (day + 2*month + 3*(month+1)/5 + year + year/4 + 6)%7;
 205            }
 206            else
 207            {
 208              weak = (day +1 + 2*month + 3*(month+1)/5 + year + year/4 -year/100 + year/400)%7;
 209            }
 210             return weak;
 211          }
 212          //把RTC读取并处理，写到DGUS对应的变量空间，主程序中每0.5秒调用一次
 213          void Read_Time()
 214          { 
 215                      uint8_t i,N,M; 
 216                      uint8_t Rtcdata[]={0,0,0,0,0,0,0,0};
 217                      Rx8130_Start();
 218                      Rx8130_Writ_Byte(0x64);
 219                      Rx8130_Writ_Byte(0x10);
 220                      Rx8130_Stop();
 221                      Rx8130_Start();
 222                      Rx8130_Writ_Byte(0x65);
 223                      for(i=6;i>0;i--)
 224                      { 
 225                                    Rtcdata[i]=Rx8130_Read_Byte();
 226                                    Rx8130_Mack();
 227                      }
 228                      Rtcdata[0]=Rx8130_Read_Byte(); Rx8130_Mnak();
 229                      Rx8130_Stop();
 230                      for(i=0;i<3;i++)  //年月日转换成HEX
 231                      { 
 232                                    N=Rtcdata[i]/16;
 233                                    M=Rtcdata[i]%16;
 234                                    Rtcdata[i]=N*10+M;
 235                      }
 236                      for(i=4;i<7;i++)  //时分秒转换成HEX
 237                      { 
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 5   

 238                                    N=Rtcdata[i]/16;
 239                                    M=Rtcdata[i]%16;
 240                                    Rtcdata[i]=N*10+M;
 241                      }
 242                      Rtcdata[3]=RTC_Get_Week(Rtcdata[0],Rtcdata[1],Rtcdata[2]);//周            
 243                      WriteDGUS(0X0010,Rtcdata,2);
 244                      WriteDGUS(0X0011,Rtcdata+2,2);
 245                      WriteDGUS(0X0012,Rtcdata+4,2);
 246                      WriteDGUS(0X0013,Rtcdata+6,2);
 247          }
 248          //====================================================================
 249          void Init_Rtc()
 250          { 
 251                       uint8_t i;
 252                         Rx8130_Start();
 253                       Rx8130_Writ_Byte(0x64);
 254                       Rx8130_Writ_Byte(0x1d);
 255                       Rx8130_Stop();
 256                       Rx8130_Start();
 257                       Rx8130_Writ_Byte(0x65);
 258                       i=Rx8130_Read_Byte();
 259                       Rx8130_Mack();
 260                       Rx8130_Read_Byte();
 261                       Rx8130_Mnak();
 262                       Rx8130_Stop();
 263                       if((i&0x02)==0x02)
 264                         {  
 265                            //重新配置时间
 266                            Rx8130_Start();   //30=00
 267                            Rx8130_Writ_Byte(0x64);
 268                            Rx8130_Writ_Byte(0x30);
 269                            Rx8130_Writ_Byte(0x00);
 270                            Rx8130_Stop();
 271                            Rx8130_Start();   //1C-1F=48 00 40 10
 272                            Rx8130_Writ_Byte(0x64);
 273                            Rx8130_Writ_Byte(0x1C);
 274                            Rx8130_Writ_Byte(0x48);
 275                            Rx8130_Writ_Byte(0x00);
 276                            Rx8130_Writ_Byte(0x40);
 277                            Rx8130_Writ_Byte(0x10);
 278                            Rx8130_Stop();
 279                            Rx8130_Start();   //10-16=RTC设置值 BCD格式
 280                            Rx8130_Writ_Byte(0x64);
 281                            Rx8130_Writ_Byte(0x10);
 282                            Rx8130_Writ_Byte(0x00); //秒
 283                            Rx8130_Writ_Byte(0x00); //分
 284                            Rx8130_Writ_Byte(0x00); //时
 285                            Rx8130_Writ_Byte(0x01); //星期
 286                            Rx8130_Writ_Byte(0x01); //日
 287                            Rx8130_Writ_Byte(0x01); //月
 288                            Rx8130_Writ_Byte(0x17); //年
 289                            Rx8130_Stop();
 290                            Rx8130_Start();   //1E-1F 00 10
 291                            Rx8130_Writ_Byte(0x64);
 292                            Rx8130_Writ_Byte(0x1E);
 293                            Rx8130_Writ_Byte(0x00); 
 294                            Rx8130_Writ_Byte(0x10);     
 295                            Rx8130_Stop();
 296                         }
 297          }
 298          //=========================================
 299          void RTC_Set_Time()
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 6   

 300          {           
 301            
 302                    //  uint16_t  Va=ReadDGUS(0x009C); //0x5AA5
 303                      uint16_t  Va;
 304                      uint8_t  zero[2]={0,0};
 305                      ReadDGUS(0x009C,(uint8_t *)&Va,2);
 306                      if(Va==0x5AA5)
 307                      {     
 308                            uint8_t N=0,S=0;
 309                            bit  Flog=1;
 310                            uint8_t TimeS[]={0,0,0,0,0,0,0};
 311                            uint16_t  V1;
 312                            ReadDGUS(0x009D,(uint8_t *)&V1,2); //年，月
 313                            N=(uint8_t)(V1>>8);TimeS[0]=((N/10)*16)+(N%10);
 314                            N=(uint8_t)(V1);   TimeS[1]=((N/10)*16)+(N%10);
 315                            ReadDGUS(0x009E,(uint8_t *)&V1,2); //日，时
 316                            N=(uint8_t)(V1>>8);TimeS[2]=((N/10)*16)+(N%10);
 317                            N=(uint8_t)(V1);   TimeS[4]=((N/10)*16)+(N%10);
 318                            ReadDGUS(0x009F,(uint8_t *)&V1,2); //分，秒
 319                            N=(uint8_t)(V1>>8);TimeS[5]=((N/10)*16)+(N%10);
 320                            N=(uint8_t)(V1);   TimeS[6]=((N/10)*16)+(N%10);
 321          //                        V1=ReadDGUS(0x00A0); //秒，x  
 322          //                        N=(uint8_t)(V1>>8);TimeS[6]=((N/10)*16)+(N%10);
 323                            WriteDGUS(0x009c,zero,1); 
 324                            while(Flog)
 325                            { 
 326                                      Rx8130_Start();   //30=00
 327                                  Rx8130_Writ_Byte(0x64);
 328                                  Rx8130_Writ_Byte(0x30);
 329                                  Rx8130_Writ_Byte(0x00);
 330                                  Rx8130_Stop();
 331                                  Rx8130_Start();   //1C-1F=48 00 40 10
 332                                  Rx8130_Writ_Byte(0x64);
 333                                  Rx8130_Writ_Byte(0x1C);
 334                                  Rx8130_Writ_Byte(0x48);
 335                                  Rx8130_Writ_Byte(0x00);
 336                                  Rx8130_Writ_Byte(0x40);
 337                                  Rx8130_Writ_Byte(0x10);
 338                                  Rx8130_Stop();
 339                                  Rx8130_Start();   //10-16=RTC设置值 BCD格式
 340                                  Rx8130_Writ_Byte(0x64);
 341                                  Rx8130_Writ_Byte(0x10);
 342                                  Rx8130_Writ_Byte(TimeS[6]); //秒
 343                                  Rx8130_Writ_Byte(TimeS[5]); //分
 344                                  Rx8130_Writ_Byte(TimeS[4]); //时
 345                                  Rx8130_Writ_Byte(TimeS[3]); //星期
 346                                  Rx8130_Writ_Byte(TimeS[2]); //日
 347                                  Rx8130_Writ_Byte(TimeS[1]); //月
 348                                  Rx8130_Writ_Byte(TimeS[0]); //年
 349                                  Rx8130_Stop();
 350                                  Rx8130_Start();   //1E-1F 00 10
 351                                  Rx8130_Writ_Byte(0x64);
 352                                  Rx8130_Writ_Byte(0x1E);
 353                                  Rx8130_Writ_Byte(0x00); 
 354                                  Rx8130_Writ_Byte(0x10);     
 355                                  Rx8130_Stop(); 
 356                                  Flog=0;
 357                             }
 358                      }
 359          }
 360          //========================================================================================================
             -================================
C51 COMPILER V9.59.0.0   I2C                                                               04/21/2025 17:51:45 PAGE 7   

 361          //**********************SD2058接口程序，SDA 10K上拉到3.3V**************
 362            
 363          
 364          
 365          
 366          #endif
 367          
 368               
 369          //========================================================================================================
             -================================
 370          
 371          //    bit s=0;
 372          //  uint8_t flag_rtc_init[8]={0};
 373          //    uint8_t flag_rtc_in[6]={0};
 374            
 375              
 376              
 377          void Clock()
 378          {
 379                  // if(RTC_Flog==0){ RTC_Flog=1;  Init_Rtc();}
 380                         if(SysTick_RTC >= 500) 
 381                         {
 382                              Read_Time();                //更新硬件RTC时间
 383                              SysTick_RTC = 0;   
 384                         }
 385                          RTC_Set_Time();    
 386          }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
