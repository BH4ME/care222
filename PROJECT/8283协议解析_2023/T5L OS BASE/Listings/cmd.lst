C51 COMPILER V9.59.0.0   CMD                                                               05/07/2025 16:35:27 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CMD
OBJECT MODULE PLACED IN .\Objects\cmd.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE Sources\cmd.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Li
                    -stings\cmd.lst) TABS(2) OBJECT(.\Objects\cmd.obj)

line level    source

   1          #include <string.h>
   2          #include "cmd.h"
   3          #include "uart.h"
   4          #include "stdio.h"
   5          #include "T5LUart4.h"
   6          static CMD_LIST command_list = {NULL, 0};  // È«¾ÖÃüÁîÁÐ±í£¬±£´æÒÑ×¢²áÃüÁî¼¯ºÏ
   7          /*
   8          * º¯Êý½éÉÜ£º ÃüÁî×¢²áº¯Êý Ã¿ÐÂÌí¼ÓÒ»¸öÃüÁî£¬¾ÍÌí¼Óµ½ÃüÁîÁÐ±íÖÐ
   9          * ÊäÈë²ÎÊý£º reg_cmds ´ý×¢²áÃüÁî½á¹¹ÌåÊý×é
  10          *            length   Êý×é¸öÊý
  11          * Êä³ö²ÎÊý£º ÎÞ
  12          * ·µ»ØÖµ £º  ÎÞ
  13          * ±¸    ×¢£º length ²»µÃ³¬¹ý MAX_CMDS_COUNT  
  14          */
  15          void register_cmds( CMD_Name_Func reg_cmds[], int length )
  16          {
  17   1          int i;
  18   1          if ( length > MAX_CMDS_COUNT )
  19   1          {
  20   2              return;
  21   2          }
  22   1       
  23   1          for ( i = 0; i < length; i++ )
  24   1          {
  25   2              if ( command_list.num < MAX_CMDS_COUNT ) // ÃüÁîÁÐ±íÎ´Âú
  26   2              {
  27   3                //printf("³õÊ¼»¯");
  28   3                  strcpy( command_list.cmdNames[command_list.num].cmd_name, reg_cmds[i].cmd_name );       //½«×Ö
             -·û´®ÃüÁî¿½±´µ½ÁÐ±íÖÐ
  29   3                  command_list.cmdNames[command_list.num].cmd_functions = reg_cmds[i].cmd_functions;          //
             -½«ÃüÁî¶ÔÓ¦µÄº¯Êý´æ´¢ÔÚÁÐ±íÖÐ
  30   3                  command_list.num++;                                                                     // ÊýÁ
             -¿ÖµÄ¬ÈÏÎª0£¬Ã¿Ìí¼ÓÒ»¸öÃüÁî£¬ÊýÁ¿¼Ó1.             
  31   3              }
  32   2          }
  33   1      }
  34           
  35          /*
  36          * º¯Êý½éÉÜ£º ÃüÁîÆ¥ÅäÖ´ÐÐº¯Êý
  37          * ÊäÈë²ÎÊý£º cmdStr ´ýÆ¥ÅäÃüÁî×Ö·û´®
  38          * Êä³ö²ÎÊý£º ÎÞ
  39          * ·µ»ØÖµ £º  ÎÞ
  40          * ±¸    ×¢£º cmdStr ³¤¶È²»µÃ³¬¹ý MAX_CMD_NAME_LENGTH
  41          */
  42          void match_cmd( char *cmdStr )
  43          {
  44   1          int i;
  45   1      
  46   1          if ( strlen( cmdStr ) > MAX_CMD_LENGTH )
  47   1          {
  48   2              return;
  49   2          }
  50   1       
  51   1          for ( i = 0; i < command_list.num; i++ )                                                      // ±éÀúÃü
C51 COMPILER V9.59.0.0   CMD                                                               05/07/2025 16:35:27 PAGE 2   

             -ÁîÁÐ±í
  52   1          {
  53   2              if ( strcmp( command_list.cmdNames[i].cmd_name, cmdStr ) == 0 )                             //±È½Ï
             -½ÓÊÕµ½µÄÃüÁî×Ö·û´® ºÍ ÁÐ±íÖÐ´æ´¢µÄÃüÁî×Ö·û´®ÊÇ·ñÏàµÈ£¬Èç¹ûÏàµÈ¾Íµ÷ÓÃÃüÁî×Ö·û´®¶ÔÓ¦µÄº¯Êý¡£
  54   2              {
  55   3                  command_list.cmdNames[i].cmd_functions();
  56   3              }
  57   2          }
  58   1      
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    396    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    382      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
