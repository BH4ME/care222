C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE Sources\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Sources;.\A
                    -PP) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /******************************************************************************
   2          * 文 件 名   : uart.c
   3          * 版 本 号   : V1.0
   4          * 作    者   : pinot
   5          * 生成日期   : 2019年11月03日
   6          * 功能描述   : UART2345串口读写
   7          * 修改历史   :
   8          * 日    期   :
   9          * 作    者   :
  10          * 修改内容   :
  11          ******************************************************************************/
  12          
  13          /*****************************************************************************
  14          自定义头文件*/
  15          #include "uart.h"
  16          
  17          /********************************
  18          *  串口接受缓存区
  19          *  缓存区大小可以根据实际进行修改
  20          *  接收到缓存数据请尽快处理，否者
  21          *  下一条数据会往尾端增加
  22          ********************************/
  23          uint8_t uart2_busy = 0;
  24          uint16_t uart2_rx_count = 0;
  25          uint8_t xdata Uart2_Rx[UART2_MAX_LEN];
  26          
  27          uint8_t uart3_busy = 0;
  28          uint16_t uart3_rx_count = 0;
  29          uint8_t xdata Uart3_Rx[UART3_MAX_LEN];
  30          
  31          uint16_t uart4_rx_count=0;
  32          uint8_t xdata Uart4_Rx[UART4_MAX_LEN];
  33          
  34          uint16_t uart5_rx_count=0;
  35          uint8_t xdata Uart5_Rx[UART5_MAX_LEN];
  36          
  37          
  38          /*****************************************************************************
  39          串口2配置*/
  40          void Uart2Init(void)
  41          {
  42   1        P0MDOUT    |= 0x10;
  43   1        MUX_SEL    |= 0x40;
  44   1        uart2_busy = 0;
  45   1        uart2_rx_count = 0;
  46   1        ADCON      = 0x80;        /*0x80=使用SREL0H:L*/
  47   1        SCON0      = 0x50;        /*方式1:10位UART*/
  48   1        PCON      &= 0x7F;        /*.7=SMOD,波特率倍频选择,0=不倍频*/
  49   1        SREL0H     = 0x03;        /*1024-FOSC/(64*波特率)*/
  50   1        SREL0L     = 0xE4;        /*1024-206438400/(64*115200)*/
  51   1        REN0       = 1;
  52   1        ES0        = 1;
  53   1      }
  54          /*****************************************************************************
C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 2   

  55          串口2发送字节*/
  56          void Uart2SendByte(uint8_t dat)
  57          {
  58   1        while(uart2_busy==1);
  59   1        uart2_busy=1;
  60   1        SBUF0 = dat;
  61   1      }
  62          /*****************************************************************************
  63          串口2发送字符串*/
  64          void Uart2SendStr(uint8_t *pstr,uint8_t strlen)
  65          {
  66   1        if((NULL == pstr)||(0 == strlen))
  67   1        {
  68   2          return;
  69   2        }
  70   1        while(strlen--)
  71   1        {
  72   2          Uart2SendByte(*pstr);
  73   2          pstr++;
  74   2        }
  75   1      }
  76          /*****************************************************************************
  77          串口2接收中断*/
  78          void UART2_ISR_PC(void)    interrupt 4
  79          {
  80   1        uint8_t res = 0;
  81   1        EA=0;
  82   1      //     if  (RI0) { SBUF0=SBUF0;while (!TI0){;}TI0=0;RI0=0; } //自环回实验,
  83   1      //     if  (TI0) {TI0=0;} 
  84   1        if(RI0==1)
  85   1        {
  86   2            res=SBUF0;
  87   2            Uart2_Rx[uart2_rx_count]=res; 
  88   2            uart2_rx_count++;
  89   2            if (uart2_rx_count >= UART2_MAX_LEN) {
  90   3            //防止溢出
  91   3              uart2_rx_count = 0;
  92   3            }
  93   2            RI0=0;       
  94   2        }
  95   1        if(TI0==1)
  96   1        {
  97   2            TI0=0;
  98   2            uart2_busy=0;
  99   2        }
 100   1      //  WDT_RST();
 101   1        EA=1;
 102   1      }
 103          
 104          
 105          #if 1
 106          /*****************************************************************************
 107          串口3配置*/
 108          void Uart3Init(void)
 109          {
 110   1        P0MDOUT    |= 0xC0;
 111   1        MUX_SEL    |= 0x20;
 112   1        uart3_busy = 0;
 113   1        uart3_rx_count = 0;
 114   1        SCON1      = 0xD0;
 115   1        SREL1H     = 0x03;        /*1024-FOSC/(32*波特率)*/
 116   1        SREL1L     = 0xC8;
C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 3   

 117   1        IEN2       = 0x01;
 118   1      }
 119          /*****************************************************************************
 120          串口3发送字节*/
 121          void Uart3SendByte(uint8_t dat)
 122          {
 123   1        while(uart3_busy==1);
 124   1        uart3_busy=1;
 125   1        SBUF1 = dat;
 126   1      }
 127          //直接写入，不需要中断查询
 128          //{
 129          //  SBUF1 = dat;
 130          //  while((SCON1&0x02)==0);
 131          //  SCON1 &=0xFD;
 132          //  SCON1 &=0xFD;
 133          //}
 134          /*****************************************************************************
 135          串口3发送字符串*/
 136          void Uart3SendStr(uint8_t *pstr,uint8_t strlen)
 137          {
 138   1        if((NULL == pstr)||(0 == strlen))
 139   1        {
 140   2          return;
 141   2        }
 142   1        while(strlen--)
 143   1        {
 144   2          Uart3SendByte(*pstr);
 145   2          pstr++;
 146   2        }  
 147   1      }
 148          /*****************************************************************************
 149          串口3接收中断*/
 150          void UART3_ISR_PC(void)    interrupt 16
 151          {
 152   1        uint8_t res=0;
 153   1        EA=0;
 154   1        if(SCON1&0x01)
 155   1        {
 156   2          res=SBUF1;
 157   2          Uart3_Rx[uart3_rx_count]=res; 
 158   2          uart3_rx_count++;
 159   2          SCON1 &= 0xFE;
 160   2          SCON1 &= 0xFE;
 161   2        }
 162   1        if(SCON1&0x02)
 163   1        {
 164   2          SCON1&=0xFD;
 165   2          SCON1&=0xFD;
 166   2          uart3_busy=0;
 167   2        }    
 168   1        WDT_RST();
 169   1        EA=1;
 170   1      }
 171          
 172          ///*****************************************************************************
 173          //串口4配置*/
 174          void Uart4Init(void)
 175          {
 176   1        uart4_rx_count=0;
 177   1        SCON2T     = 0x80;        /*开启UART4发送*/
 178   1        SCON2R     = 0x80;        /*开启UART4接收*/
C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 4   

 179   1        BODE2_DIV_H= 0x00;        /*FCLK/(8*DIV)*/
 180   1        BODE2_DIV_L= 0xe0;
 181   1        //ES2T=1;
 182   1       // ES2R=1;
 183   1      }
 184          ///*****************************************************************************
 185          //串口4发送字节*/
 186          //void Uart4SendByte(uint8_t dat)
 187          //{
 188          //  SBUF2_TX = dat;    
 189          //  while((SCON2T&0x01) == 0); 
 190          //  SCON2T &= 0xFE;  
 191          //}
 192          
 193          //void Uart4SendStr(uint8_t *pstr,uint8_t strlen)
 194          //{
 195          //  if((NULL == pstr)||(0 == strlen))
 196          //  {
 197          //    return;
 198          //  }
 199          ////  P0_0 = 1;
 200          //  while(strlen--)
 201          //  {
 202          //    Uart4SendByte(*pstr);
 203          //    pstr++;
 204          //  }
 205          ////  P0_0 = 0;
 206          //}
 207          ///*****************************************************************************
 208          //串口4发送中断*/
 209          //void UART4_TX_ISR_PC(void)    interrupt 10
 210          //{ 
 211          //}
 212          ///*****************************************************************************
 213          //串口4接收中断*/
 214          //void UART4_RX_ISR_PC(void)    interrupt 11
 215          //{
 216          //  uint8_t res=0;
 217          //  EA=0;
 218          //  if((SCON2R&0x01)==0x01)
 219          //  {
 220          //    res=SBUF2_RX;
 221          //    Uart4_Rx[uart4_rx_count]=res; 
 222          //    uart4_rx_count++;
 223          //    SCON2R&=0xFE;
 224          //    if (uart4_rx_count >= UART4_MAX_LEN) {
 225          //        //防止溢出
 226          //        uart4_rx_count = 0;
 227          //    }
 228          //  }
 229          //  WDT_RST();
 230          //  EA=1;
 231          //}
 232          
 233          #endif
 234          
 235          
 236          ///*****************************************************************************
 237          //串口5配置*/
 238          void Uart5Init(void)
 239          {
 240   1        uart5_rx_count=0;
C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 5   

 241   1        SCON3T     = 0x80;        /*开启UART4发送*/
 242   1        SCON3R     = 0x80;        /*开启UART4接收*/
 243   1        BODE3_DIV_H= 0x00;        /*FCLK/(8*DIV)*/
 244   1        BODE3_DIV_L= 0xE0;
 245   1        //ES2T=1;
 246   1        ES3R=1;
 247   1      }
 248          
 249          #if 1
 250          /*****************************************************************************
 251          串口5发送字节*/
 252          void Uart5SendByte(uint8_t dat)
 253          {
 254   1        SBUF3_TX = dat;    
 255   1        while((SCON3T&0x01) == 0); 
 256   1        SCON3T &= 0xFE;
 257   1      }
 258          
 259          
 260          
 261          /*****************************************************************************
 262          串口5发送字符串*/
 263          void Uart5SendStr(uint8_t *pstr,uint8_t strlen)
 264          {
 265   1        if((NULL == pstr)||(0 == strlen))
 266   1        {
 267   2          return;
 268   2        }
 269   1        while(strlen--)
 270   1        {
 271   2          Uart5SendByte(*pstr);
 272   2          pstr++;
 273   2        }  
 274   1      }
 275          
 276          
 277          /*****************************************************************************
 278          串口5发送中断*/
 279          void UART5_TX_ISR_PC(void)    interrupt 12
 280          { 
 281   1      }
 282          
 283          #endif
 284          /*****************************************************************************
 285          串口5接收中断*/
 286          void UART5_RX_ISR_PC(void)    interrupt 13
 287          {
 288   1        uint8_t res=0;
 289   1        EA=0;
 290   1        if((SCON3R&0x01)==0x01)
 291   1        {
 292   2      
 293   2          res=SBUF3_RX;
 294   2          Uart5_Rx[uart5_rx_count]=res; 
 295   2          uart5_rx_count++;
 296   2          SCON3R&=0xFE;
 297   2          if (uart5_rx_count >= UART5_MAX_LEN) {
 298   3              //防止溢出
 299   3              uart5_rx_count = 0;
 300   3          }
 301   2        }
 302   1        
C51 COMPILER V9.59.0.0   UART                                                              04/22/2025 11:07:21 PAGE 6   

 303   1        
 304   1        //WDT_RST();
 305   1        EA=1;
 306   1      }
 307          
 308          /*****************************************************************************
 309          串口总配置*/
 310          void InitUart(void)
 311          {
 312   1       // Uart2Init();
 313   1      //  Uart3Init();
 314   1        Uart4Init();
 315   1        Uart5Init();
 316   1      }
 317          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    641    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   8490       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
