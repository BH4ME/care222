C51 COMPILER V9.59.0.0   QRJ                                                               04/23/2025 19:11:06 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE QRJ
OBJECT MODULE PLACED IN .\Objects\qrj.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE PAGE\qrj.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Sources;.\
                    -APP;.\PAGE) DEBUG PRINT(.\Listings\qrj.lst) TABS(2) OBJECT(.\Objects\qrj.obj)

line level    source

   1          #include  "qrj.h"
   2          #include "dgus.h"
   3          #include "home.h"
   4          //气溶胶消毒
   5          double TIME_static=0.0;
   6          void QRJ_mm_to_s(u16 L_T);
   7          
   8          
   9          u8 current_st;
  10          //初始化0x00，第一次进入界面0x01，就绪态0x02（第一次进入界面只运行一次后，未执行任务），运行态0x03开始，
  11          //运行态暂停0x04，运行态结束0x05,复位0x06
  12          /*******************************************************
  13          //开机初始化QRJ_Init 只运行一次
  14          第一次进入界面（从别的页面跳转过来的），或者点击复位按键 QRJ_Reset 只运行一次
  15          在当前页面但未进行任务及未开始或未处于暂停状态QRJ_prepare
  16          进行任务中（处于开始或暂停状态，任务完成仍为开始状态）QRJ_run 但只有按键按的时候才执行
  17          ******************************************************/
  18          
  19          
  20          
  21          void QRJ_run()  //按下操作 正在照射   在handle.c中调用 局限性每次有按压反馈的时候才会调用
  22          {
  23   1      
  24   1      
  25   1      }
  26          
  27          
  28          void QRJ_Init()   //开机初始化
  29          {
  30   1        current_st = 0x00;
  31   1        
  32   1      }
  33          
  34          
  35          
  36          //u8 last_page;
  37          void  QRJ_Set()       //每次进入页面初始化
  38          {
  39   1      
  40   1      }
  41          
  42          void  QRJ_Reset()       //按下复位键 只进行一次 
  43          {
  44   1      
  45   1      }
  46            
  47          //    L_int   mm
  48          
  49          float qirongjiao_j=0.0;
  50          
  51          void QRJ_prepare()  //在当前页面 但未操作
  52          {
  53   1        u16 ResTime_sec;
  54   1        u16 ResTime_min;  
C51 COMPILER V9.59.0.0   QRJ                                                               04/23/2025 19:11:06 PAGE 2   

  55   1        u16 QRJ_mj; 
  56   1      
  57   1      
  58   1        ReadDGUS(0x5100,(uint8_t *)&QRJ_mj,sizeof(QRJ_mj));   //读取杀灭log值 范围1~5
  59   1        switch(QRJ_mj)
  60   1        {
  61   2          case 1:
  62   2          {
  63   3            qirongjiao_j  = 500;
  64   3            break;
  65   3          }
  66   2              case 2:
  67   2          {
  68   3            qirongjiao_j  = 1000;
  69   3            break;
  70   3          }
  71   2              case 3:
  72   2          {
  73   3            qirongjiao_j  = 1500;
  74   3            break;
  75   3          }
  76   2              case 4:
  77   2          {
  78   3            qirongjiao_j  = 2500;
  79   3            break;
  80   3          }
  81   2              case 5:
  82   2          {
  83   3            qirongjiao_j  = 4000;
  84   3            break;
  85   3          }
  86   2        }
  87   1        
  88   1        QRJ_mm_to_s(L_int); //根据距离和功率得到时间
  89   1        
  90   1        ResTime_min=(u16)(TIME_static)/16;
  91   1        ResTime_sec=(u16)(TIME_static)%16;
  92   1        WriteDGUS(0x2820,(uint8_t *)&ResTime_min,sizeof(ResTime_min));    /***剩余时间*分钟****/
  93   1        WriteDGUS(0x2800,(uint8_t *)&ResTime_min,sizeof(ResTime_min));    /***剩余时间*分钟****/
  94   1        WriteDGUS(0x2805,(uint8_t *)&ResTime_sec,sizeof(ResTime_sec));    /***剩余时间*秒****/
  95   1        WriteDGUS(0x2825,(uint8_t *)&ResTime_sec,sizeof(ResTime_sec));    /***剩余时间*秒****/
  96   1      
  97   1      }
  98            
  99            
 100            
 101          /******************输入距离给出时间 mm->s*********/
 102          u8 L_T_S_FLAG;
 103          
 104          void QRJ_mm_to_s(u16 L_T) 
 105          {
 106   1        double L_CM;
 107   1        L_CM=L_T/10.0;
 108   1        if(L_CM<400 && L_CM>5) L_T_S_FLAG=1;    //在5cm~4m范围
 109   1              else L_T_S_FLAG=5;
 110   1      
 111   1        switch(L_T_S_FLAG)
 112   1        {
 113   2          case 1:
 114   2          {
 115   3            TIME_static=qirongjiao_j/change_P_uW_doing;
 116   3            break;
C51 COMPILER V9.59.0.0   QRJ                                                               04/23/2025 19:11:06 PAGE 3   

 117   3          }
 118   2      
 119   2              default:
 120   2          {
 121   3            L_T_S_FLAG=6;
 122   3            
 123   3            break;
 124   3          }
 125   2        }
 126   1      }
 127          
 128          
 129          void QRJ_stop()
 130          {
 131   1        
 132   1      }
 133          
 134          
 135          
 136          void QRJ_Home() //循环运行
 137          {
 138   1        
 139   1          if(last_page!=CurrentPageNum[1])  //第一次进入页面
 140   1        {
 141   2          last_page=CurrentPageNum[1];  
 142   2          current_st = 0x01;
 143   2        }
 144   1      //  else 
 145   1      //  {
 146   1      //    
 147   1      //  } 
 148   1        
 149   1        switch(current_st)    //在handle.c触摸反馈中检测
 150   1        {
 151   2          case 0:   //开机初始化状态
 152   2          {
 153   3            current_st = 0x01;  //初始化成功，跳转到第一次初始化态
 154   3          //  break;
 155   3          }
 156   2          
 157   2          case 1:   //第一次初始化态
 158   2          {
 159   3            current_st = 0x02;  //第一次初始化成功，跳转到就绪态
 160   3            QRJ_Set();
 161   3            
 162   3          //  break;
 163   3          }
 164   2          
 165   2          case 2:   //就绪态
 166   2          {
 167   3            QRJ_prepare();
 168   3            break;
 169   3          }
 170   2          
 171   2              case 3:   //运行态开始
 172   2          {
 173   3            
 174   3            QRJ_run();
 175   3            break;
 176   3          }
 177   2          
 178   2              case 4:   //运行态暂停
C51 COMPILER V9.59.0.0   QRJ                                                               04/23/2025 19:11:06 PAGE 4   

 179   2          {
 180   3            QRJ_stop();
 181   3            break;
 182   3          }
 183   2          
 184   2              case 5:   //运行态结束 此为自然结束不包含复位
 185   2          {
 186   3            
 187   3            break;
 188   3          }
 189   2              case 6:   //运行态复位 只进行一次 然后跳转到第一次初始化
 190   2          {
 191   3            current_st = 0x01;  // 置位 到第一次初始化
 192   3            QRJ_Reset();  //只运行一次
 193   3            
 194   3            break;
 195   3          }
 196   2          
 197   2          default :
 198   2          {
 199   3            break;
 200   3          }
 201   2          
 202   2        }
 203   1        
 204   1        
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
