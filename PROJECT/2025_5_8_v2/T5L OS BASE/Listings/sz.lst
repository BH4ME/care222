C51 COMPILER V9.59.0.0   SZ                                                                05/08/2025 17:26:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SZ
OBJECT MODULE PLACED IN .\Objects\sz.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE PAGE\sz.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Sources;.\A
                    -PP;.\PAGE) DEBUG PRINT(.\Listings\sz.lst) TABS(2) OBJECT(.\Objects\sz.obj)

line level    source

   1          #include "sz.h"
   2          #include "timer.h"
   3          #include "adc.h"
   4          #include "interactive.h"
   5          #include "norflash.h"
   6          
   7          
   8          
   9          void  SZ_prepare()
  10          {
  11   1        if(ADC_100ms >= 2)  //200ms
  12   1        {
  13   2          T_100MS_ADC_isr();
  14   2          ADC_100ms=0;
  15   2        }
  16   1        
  17   1      }
  18          
  19          
  20          /********************************************************************
  21          治疗预设
  22          皮肤面照射 创伤面照射 烧伤面照射 三个模式在norflash中各有一个地址，分开存储，以原始数据存储
  23          整体在norflash中还有一个地址，已结构体的形式存储每一个前面有标志位，存储以u8的形式
  24          整体在norflash中还有一个地址，以原始数据存储，四个 u16，最前面有u16的标志位
  25          
  26          *************************************************************************/
  27          
  28          
  29          void zhiliao_date_INIT()  //从NORFLASH读取后，写入DGUS和屏幕对应的值
  30          {
  31   1          u16 buff_user[4];
  32   1        //  u8 check[6];
  33   1      //  u8 Nor_buff[12];
  34   1      //  u8 H[3];
  35   1      //  u8 M[3];
  36   1      //  u8 L[3];
  37   1        
  38   1         /***********固定头*************/
  39   1        zhiliao_set_nor.Head_set_H=0XF0;
  40   1        zhiliao_set_nor.Head_set_M=0XF1;
  41   1        zhiliao_set_nor.Head_set_L=0XF2;
  42   1        
  43   1        ReadNorFlash_Dgus(Nor_zhiliao_set_Ad,SET_zhiliao_moshi_Adress,6); //读取到虚拟地址 0x3200 处理后的数据
  44   1        ReadNorFlash_Str(Nor_zhiliao_set_Ad,(uint8_t *)&zhiliao_set_nor,6); //读取到结构体 
  45   1        
  46   1        ReadNorFlash_Str(Nor_zhiliao_user_Ad,(uint8_t*)&buff_user,4);     //加载上次 手动录入三个变量
  47   1        if(buff_user[0]==0x00f6)
  48   1        {
  49   2          WriteDGUS(0x2400, (uint8_t *)&buff_user[1],sizeof(buff_user[1])); 
  50   2          WriteDGUS(0x2410, (uint8_t *)&buff_user[2],sizeof(buff_user[2])); 
  51   2          WriteDGUS(0x2420, (uint8_t *)&buff_user[3],sizeof(buff_user[3])); 
  52   2          //WriteDGUS(0x1700, (uint8_t *)&buff_user,sizeof(buff_user)); 
  53   2        }       
  54   1        ReadNorFlash_Dgus(Nor_zhiliao_set_initial_3_Ad, 0X1320,2);    //设置页面的地址 经过算法处理完的u8
C51 COMPILER V9.59.0.0   SZ                                                                05/08/2025 17:26:36 PAGE 2   

  55   1        ReadNorFlash_Dgus(Nor_zhiliao_set_initial_2_Ad, 0X1450,2);  
  56   1        ReadNorFlash_Dgus(Nor_zhiliao_set_initial_1_Ad, 0X1310,2);
  57   1        
  58   1      }
  59          
  60          void zhiliao_check()  //检查输入的治疗模式下三个模式的值是否符合规范
  61          {
  62   1        
  63   1        
  64   1        
  65   1      }
  66          
  67          
  68          void zhiliao_SET()    //放在设置页面 handle中
  69          {
  70   1        
  71   1        u8 MJ_H[4]; //2023 02 18  年月日
  72   1                      //0  1  2  3
  73   1        u8 MJ_M[4]; //00  12 45 23  时分秒
  74   1                      //0   1  2  3
  75   1        u8  MJ_L[4];
  76   1       u8 MJ_H_M_L[12]={0};
  77   1      //u8 Nor_buff[10];  //0xf7
  78   1        u32 MJ_H_HEX,MJ_L_HEX,MJ_M_HEX;
  79   1        
  80   1      // /***********固定头*************/
  81   1      //zhiliao_set_nor.Head_set_H=0XF0;
  82   1      //zhiliao_set_nor.Head_set_M=0XF1;
  83   1      //zhiliao_set_nor.Head_set_L=0XF2;
  84   1      
  85   1        ReadDGUS(0X1310,(uint8_t *)&MJ_H,sizeof(MJ_H));
  86   1        ReadDGUS(0X1450,(uint8_t *)&MJ_M,sizeof(MJ_M));
  87   1        ReadDGUS(0X1320,(uint8_t *)&MJ_L,sizeof(MJ_L));
  88   1      // Nor_buff[0]=0xf7;      //头枕=帧0xf7
  89   1      // Nor_buff[1]=MJ_H[1];
  90   1      // Nor_buff[2]=MJ_H[2];
  91   1      // Nor_buff[3]=MJ_H[3];
  92   1      // Nor_buff[4]=MJ_M[1];
  93   1      // Nor_buff[5]=MJ_M[2];
  94   1      // Nor_buff[6]=MJ_M[3];
  95   1      // Nor_buff[7]=MJ_L[1];
  96   1      // Nor_buff[8]=MJ_L[2];
  97   1      // Nor_buff[9]=MJ_L[3];
  98   1          
  99   1      //WriteNorFlash_Str(Nor_zhiliao_set_initial_1_Ad, (uint8_t *)&Nor_buff,6);    //写入norflash中未经过算法处理
             -的源码
 100   1        WriteNorFlash_Dgus(Nor_zhiliao_set_initial_3_Ad, 0X1320,2); 
 101   1        WriteNorFlash_Dgus(Nor_zhiliao_set_initial_2_Ad, 0X1450,2); 
 102   1        WriteNorFlash_Dgus(Nor_zhiliao_set_initial_1_Ad, 0X1310,2);
 103   1      
 104   1        MJ_H_HEX=(u32)(MJ_H[0])<<24 | (u32)(MJ_H[1])<<16  | (u32)(MJ_H[2])<<8 | (u32)(MJ_H[3]);
 105   1        MJ_M_HEX=(u32)(MJ_M[0])<<24 | (u32)(MJ_M[1])<<16  | (u32)(MJ_M[2])<<8 | (u32)(MJ_M[3]);
 106   1        MJ_L_HEX=(u32)(MJ_L[0])<<24 | (u32)(MJ_L[1])<<16  | (u32)(MJ_L[2])<<8 | (u32)(MJ_L[3]);
 107   1        
 108   1        
 109   1        zhiliao_set_nor.H_mj=(MJ_H_HEX/10000)%1000;
 110   1      //  if(zhiliao_set_nor.H_mj==0 || zhiliao_set_nor.H_mj>=100)  //不合法
 111   1      //  {
 112   1      //    zhiliao_set_nor.H_mj=1;
 113   1      //    
 114   1      //  }
 115   1        zhiliao_set_nor.H_on=(MJ_H_HEX/100)%100;
C51 COMPILER V9.59.0.0   SZ                                                                05/08/2025 17:26:36 PAGE 3   

 116   1        zhiliao_set_nor.H_off=MJ_H_HEX%100;
 117   1        
 118   1        zhiliao_set_nor.M_mj=(MJ_M_HEX/10000)%1000;
 119   1        zhiliao_set_nor.M_on=(MJ_M_HEX/100)%100;
 120   1        zhiliao_set_nor.M_off=MJ_M_HEX%100;
 121   1      
 122   1        
 123   1        zhiliao_set_nor.L_mj=(MJ_L_HEX/10000)%1000;
 124   1        zhiliao_set_nor.L_on=(MJ_L_HEX/100)%100;
 125   1        zhiliao_set_nor.L_off=MJ_L_HEX%100;
 126   1      
 127   1        WriteNorFlash_Str(Nor_zhiliao_set_Ad, (uint8_t *)&zhiliao_set_nor,6); 
 128   1      //  WriteDGUS(0X3200, (uint8_t *)&zhiliao_set_nor,sizeof(zhiliao_set_nor));     //测试
 129   1      }
 130          
 131          
 132          
 133          
 134          void SZ_INIT()  //放在HOME_INIT用于开机初始化 只进行一次
 135          {
 136   1        zhiliao_date_INIT();  //从norflash读取到治疗的三个模式的数据，并且写入到设置页面
 137   1        
 138   1        
 139   1        
 140   1      }
 141          
 142          
 143          void SZ_Home()
 144          {
 145   1        
 146   1          
 147   1          if(last_page!=CurrentPageNum[1])  //第一次进入页面
 148   1        {
 149   2          last_page=CurrentPageNum[1];  
 150   2          current_st = 0x01;
 151   2        }
 152   1        
 153   1        
 154   1        switch(current_st)    //在handle.c触摸反馈中检测
 155   1        {
 156   2          case 0:   //开机初始化状态
 157   2          {
 158   3            current_st = 0x01;  //初始化成功，跳转到第一次初始化态
 159   3      
 160   3          }
 161   2          
 162   2          case 1:   //第一次初始化态
 163   2          {
 164   3            current_st = 0x02;  //第一次初始化成功，跳转到就绪态
 165   3          }
 166   2          
 167   2          case 2:   //就绪态
 168   2          {
 169   3            
 170   3            SZ_prepare(); 
 171   3            break;
 172   3          }
 173   2      
 174   2          
 175   2          default :
 176   2          {
 177   3            current_st = 0x02;
C51 COMPILER V9.59.0.0   SZ                                                                05/08/2025 17:26:36 PAGE 4   

 178   3          //  SZ_prepare();
 179   3            break;
 180   3          }
 181   2        }
 182   1        
 183   1        
 184   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1109    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =     12      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
