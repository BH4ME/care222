C51 COMPILER V9.59.0.0   TOF                                                               05/07/2025 18:17:57 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TOF
OBJECT MODULE PLACED IN .\Objects\tof.obj
COMPILER INVOKED BY: D:\Keil\Keil_C51\C51\BIN\C51.EXE APP\tof.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Sources;.\A
                    -PP;.\PAGE) DEBUG PRINT(.\Listings\tof.lst) TABS(2) OBJECT(.\Objects\tof.obj)

line level    source

   1          #include "tof.h"
   2          #include "sys.h"
   3          #include "dgus.h"
   4          //激光测距 函数位于USART3接收isr中
   5          
   6          //u8 test_error[9]={1,2,3,4,5,6,7,8,9};
   7          
   8          //状态机   =0  等待第一个5A   =1  等待第二个5A =>3 第几个数据
   9            //校验和
  10          uint8_t GY53_Data[16];//接受到的完整数据
  11          u16 L_int;  //距离
  12          //bit L_change=0;
  13          uint8_t MODE;
  14          /***************************激光测距********************/
  15          void UART5_isr()
  16          {
  17   1        uint8_t DATA15=00; 
  18   1        static u16 UART5_FLAG =0; //只赋值一次
  19   1        uint8_t Dat;
  20   1         Dat = SBUF3_RX;                //读到这次的数据  
  21   1        //Uart2SendByte((uint8_t *)&L);
  22   1        //DAT_W_EEPROM = EEPROM_Read(0);
  23   1        //UART_Send_byte(1,KEY_FLAG);           //用串口1把串口2的数据发出来
  24   1        switch(UART5_FLAG)
  25   1        {
  26   2          case 0:
  27   2          {
  28   3            if(Dat == 0x57)                 //判断第一个5A
  29   3            {
  30   4              GY53_Data[UART5_FLAG] = Dat;   //存起来
  31   4              UART5_FLAG=1;                //状态置1
  32   4            }
  33   3            break;
  34   3          }
  35   2          case 1:
  36   2          {
  37   3            if(Dat == 0x00)                 //判断第二个5A
  38   3            {
  39   4              GY53_Data[UART5_FLAG] = Dat;   //存起来
  40   4              UART5_FLAG=2;                  //状态置2
  41   4            }
  42   3            else
  43   3            {
  44   4              UART5_FLAG = 0;               //状态置0
  45   4            }
  46   3            break;
  47   3          }
  48   2          default:
  49   2          {
  50   3                GY53_Data[UART5_FLAG] = Dat;
  51   3                UART5_FLAG++;
  52   3                if(UART5_FLAG>0x0F)                   //00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
  53   3            {
  54   4      
C51 COMPILER V9.59.0.0   TOF                                                               05/07/2025 18:17:57 PAGE 2   

  55   4                UART5_FLAG = 0;                       //状态置0       
  56   4                DATA15 = GY53_Data[0X00]+GY53_Data[0X01]+GY53_Data[0X02]+GY53_Data[0X03]+GY53_Data[0X04]+GY53_Data[0X
             -05]+GY53_Data[0X06]+GY53_Data[0X07]+GY53_Data[0X08]+GY53_Data[0X09]+GY53_Data[0X0A]+GY53_Data[0X0B]+GY53_Data[0X0C]+GY53
             -_Data[0X0D]+GY53_Data[0X0E]; //计算校验和
  57   4      
  58   4              
  59   4              if(DATA15 == GY53_Data[0X0F])           //检验时候成功
  60   4              {
  61   5              //L[0] = ((GY53_Data[0X0A]<<16 | GY53_Data[0X09]<<8) | GY53_Data[0X08]); 
  62   5                
  63   5                /*************检测状态位是否为0********************/
  64   5                if(GY53_Data[0X0b]==0)
  65   5                {
  66   6      
  67   6                L_int=((GY53_Data[0X0A]<<16 | GY53_Data[0X09]<<8) | GY53_Data[0X08]);
  68   6      
  69   6      //            if(L_change==1)
  70   6      //            {
  71   6      //              L_change=0;
  72   6      //              if(MODE==1)WriteDGUS(0x4913,(uint8_t *)&(colour_w),sizeof(colour_w));
  73   6      //                else
  74   6      //              WriteDGUS(L_sp_ad+0x3,(uint8_t *)&(colour_w),sizeof(colour_w));
  75   6      //            }
  76   6                  
  77   6                }
  78   5      //          else  {L_change=1;
  79   5      //          if(MODE==1)WriteDGUS(0x4913,(uint8_t *)&(colour_y),sizeof(colour_y));
  80   5      //          else WriteDGUS(L_sp_ad+0x3,(uint8_t *)&(colour_y),sizeof(colour_y));} 
  81   5      //          
  82   5                
  83   5                //(GY53_Data[0X0A]     GY53_Data[0X09]      GY53_Data[0X08]   //1000=xxx.m
  84   5      
  85   5              }
  86   4            }
  87   3            break;
  88   3          }
  89   2        }
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     21    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
